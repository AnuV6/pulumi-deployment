name: Build and Deploy with Docker

on:
  push:
    branches: [ main ]
    paths:
      - 'next-app/**'
      - '!**/*.md'
      - '!.github/workflows/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CONTAINER_PORT: 3000
  DOCKER_BUILD_CONTEXT: ./next-app
  DOCKERFILE_PATH: ./next-app/Dockerfile
  NODE_VERSION: '18.17.1'

jobs:
  build-and-push:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=sha,format=long
            type=ref,event=branch
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=Next.js application
            org.opencontainers.image.vendor=${{ github.repository_owner }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: next-app/package-lock.json

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.DOCKER_BUILD_CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}
          build-args: |
            NODE_ENV=production
            NODE_VERSION=${{ env.NODE_VERSION }}
          platforms: linux/amd64
          provenance: true
          sbom: true

  deploy:
    name: Deploy to Azure Web Apps
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    concurrency: production_environment

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App for Frontend
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME_FE || 'your-fe-app-name' }}
          slot-name: 'production'
          images: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
          configuration-file: './azure-app-service-config.json'
          startup-command: 'npm start'

      - name: Configure App Settings for Frontend
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME_FE || 'your-fe-app-name' }}
          mask-inputs: true
          app-settings-json: |
            [
              {
                "name": "NEXT_PUBLIC_API_URL",
                "value": "https://${{ vars.AZURE_WEBAPP_NAME_BE || 'your-be-app-name' }}.azurewebsites.net"
              },
              {
                "name": "NODE_ENV",
                "value": "production"
              },
              {
                "name": "NEXT_TELEMETRY_DISABLED",
                "value": "1"
              }
            ]

      - name: Deploy to Azure Web App for Backend
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME_BE || 'your-be-app-name' }}
          slot-name: 'production'
          images: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
          configuration-file: './azure-app-service-config.json'
          startup-command: 'npm run start:backend'

      - name: Configure App Settings for Backend
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME_BE || 'your-be-app-name' }}
          mask-inputs: true
          app-settings-json: |
            [
              {
                "name": "DATABASE_URL",
                "value": "${{ secrets.DATABASE_URL }}"
              },
              {
                "name": "NODE_ENV",
                "value": "production"
              },
              {
                "name": "NEXT_TELEMETRY_DISABLED",
                "value": "1"
              }
            ]
