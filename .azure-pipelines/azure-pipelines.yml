trigger:
  branches:
    include:
      - main

variables:
  imageName: 'nextjs-app'

stages:
  - stage: BuildAndPush
    displayName: Build and Push Docker Image
    jobs:
      - job: Build
        displayName: Build and Push to ACR
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - task: Docker@2
            displayName: 'Build and push image to ACR'
            inputs:
              command: buildAndPush
              repository: '$(imageName)'
              dockerfile: 'next-app/Dockerfile'
              containerRegistry: 'AzureContainerRegistryServiceConnection'
              tags: |
                latest

  - stage: DeployInfrastructure
    displayName: Deploy with Terraform
    dependsOn: BuildAndPush
    jobs:
      - job: Terraform
        displayName: Terraform Deploy
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self

          - task: AzureCLI@2
            displayName: 'Login to Azure'
            inputs:
              azureSubscription: 'AzureRMServiceConnection'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Logged in to Azure CLI"

          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: '1.5.7'

          - task: TerraformCLI@1
            displayName: 'Terraform Init'
            inputs:
              command: init
              workingDirectory: 'infra'
              backendType: azurerm
              backendServiceArm: 'AzureRMServiceConnection'
              ensureBackend: true
              backendAzureRmResourceGroupName: '<backend-rg>'
              backendAzureRmStorageAccountName: '<backendstorageacct>'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'nextjs.tfstate'

          - task: TerraformCLI@1
            displayName: 'Terraform Plan'
            inputs:
              command: plan
              workingDirectory: 'infra'
              environmentServiceName: 'AzureRMServiceConnection'

          - task: TerraformCLI@1
            displayName: 'Terraform Apply'
            inputs:
              command: apply
              workingDirectory: 'infra'
              environmentServiceName: 'AzureRMServiceConnection'
              args: '-auto-approve'
